version: '3.8'

services:
  euler-yield-bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: euler-yield-bot
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      # Persist data and logs outside container
      - ./data:/app/data
      - ./logs:/app/logs
      # Mount config for easy updates
      - ./config:/app/config
    environment:
      # Required: Ethereum RPC URL
      - ETH_RPC_URL=${ETH_RPC_URL}
      
      # Server configuration
      - PORT=3000
      - NODE_ENV=production
      - LOG_LEVEL=${LOG_LEVEL:-info}
      
      # Optional: Discord alerts
      - DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}
      
      # Optional: Telegram alerts
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      
      # Optional: Email alerts
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - ALERT_EMAIL=${ALERT_EMAIL}
      
      # Database and intervals
      - DATABASE_PATH=/app/data/yields.db
      - SCRAPING_INTERVAL=${SCRAPING_INTERVAL:-300000}
      - ANALYSIS_INTERVAL=${ANALYSIS_INTERVAL:-900000}
      
      # Alert thresholds
      - HIGH_YIELD_THRESHOLD=${HIGH_YIELD_THRESHOLD:-15}
      - YIELD_DROP_THRESHOLD=${YIELD_DROP_THRESHOLD:-5}
      - NEW_OPPORTUNITY_THRESHOLD=${NEW_OPPORTUNITY_THRESHOLD:-8}
    
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Resource limits (adjust as needed)
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Add a reverse proxy for HTTPS/custom domain
  # nginx:
  #   image: nginx:alpine
  #   container_name: euler-yield-bot-proxy
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/ssl/certs:ro
  #   depends_on:
  #     - euler-yield-bot

# Create named volumes for persistence
volumes:
  data:
    driver: local
  logs:
    driver: local

# Optional: Create a custom network
networks:
  default:
    name: euler-yield-network
